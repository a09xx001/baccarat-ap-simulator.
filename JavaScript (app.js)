// CP 和 AP 數據
const cpDict = {
  'A': 0, '2': -1, '3': -1, '4': -2, '5': -1,
  '6': 2, '7': 3, '8': 0, '9': 1, '10': 0,
  'J': 0, 'Q': 0, 'K': 0
};

const apDict = {
  0: -0.4, 1: -0.3, 2: -0.2, 3: 0.3, 4: 0.2,
  5: 0.1, 6: 0.2, 7: 0.3, 8: 0.5, 9: 0.6
};

// 牌點數計算
function cardPoint(cards) {
  return cards.reduce((sum, card) => sum + cpDict[card], 0);
}

function realPoint(cards) {
  const valueMap = { 'A': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9, '10': 0, 'J': 0, 'Q': 0, 'K': 0 };
  const total = cards.reduce((sum, card) => sum + valueMap[card], 0);
  return total % 10;
}

// 模擬一局遊戲
function simulateRound(bankerCards, playerCards) {
  const bankerCp = cardPoint(bankerCards);
  const playerCp = cardPoint(playerCards);
  const totalCp = bankerCp + playerCp;

  const bankerPoint = realPoint(bankerCards);
  const playerPoint = realPoint(playerCards);

  const bankerAp = apDict[bankerPoint];
  const playerAp = apDict[playerPoint];

  const bankerAdv = totalCp * bankerAp;
  const playerAdv = totalCp * playerAp;

  if (bankerAdv > playerAdv) return "banker";
  if (playerAdv > bankerAdv) return "player";
  return "neutral";
}

// 批次模擬多局
function simulateMultipleRounds() {
  const rounds = parseInt(document.getElementById('rounds').value);
  const results = { "banker": 0, "player": 0, "neutral": 0 };
  const fullDeck = ['A', '2', '3', '4', '5', '6', '7', '8', '9', '10', 'J', 'Q', 'K'].flatMap(card => Array(6).fill(card));

  let log = "";
  for (let i = 0; i < rounds; i++) {
    const shuffledDeck = [...fullDeck];
    shuffle(shuffledDeck);

    const bankerCards = [shuffledDeck.pop(), shuffledDeck.pop()];
    const playerCards = [shuffledDeck.pop(), shuffledDeck.pop()];

    const result = simulateRound(bankerCards, playerCards);
    results[result]++;

    log += `第 ${i+1} 局: 莊家: ${bankerCards.join(', ')}, 閒家: ${playerCards.join(', ')} - `;
    log += result === "banker" ? "建議下注: 莊" : result === "player" ? "建議下注: 閒" : "無明顯優勢<br>";
  }

  const bankerWinPct = (results["banker"] / rounds) * 100;
  const playerWinPct = (results["player"] / rounds) * 100;
  const neutralPct = (results["neutral"] / rounds) * 100;

  document.getElementById('bankerWinPct').textContent = `${bankerWinPct.toFixed(2)}%`;
  document.getElementById('playerWinPct').textContent = `${playerWinPct.toFixed(2)}%`;
  document.getElementById('neutralPct').textContent = `${neutralPct.toFixed(2)}%`;

  document.getElementById('log').innerHTML = log;
}

// 洗牌函數
function shuffle(array) {
  for (let i = array.length - 1; i > 0; i--) {
    const j = Math.floor(Math.random() * (i + 1));
    [array[i], array[j]] = [array[j], array[i]];
  }
}
